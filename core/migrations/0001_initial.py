# Generated by Django 5.0.7 on 2024-07-24 15:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AnimalGrp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BmpCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BmpType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BmpUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('fips', models.IntegerField()),
                ('state', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='GeographicArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('fips', models.IntegerField()),
                ('county', models.IntegerField()),
                ('state', models.CharField(max_length=2)),
                ('ncounties', models.IntegerField()),
                ('geo_data', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pollutant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('loads', models.JSONField(blank=True, default=dict, null=True)),
                ('bmps', models.JSONField(blank=True, default=dict, null=True)),
                ('costs', models.JSONField(blank=True, default=dict, null=True)),
                ('bmp_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('advanced_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('info', models.JSONField(blank=True, default=dict, null=True)),
                ('land_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('animal_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('manure_file', models.FileField(blank=True, null=True, upload_to='results')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('data_revision', models.IntegerField()),
                ('condition', models.IntegerField()),
                ('type_id', models.IntegerField()),
                ('backout', models.IntegerField()),
                ('point_src', models.IntegerField()),
                ('atm_dep', models.IntegerField()),
                ('climate_change', models.IntegerField()),
                ('soil', models.IntegerField()),
                ('base_load', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bmp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('bmp_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bmpcategory')),
                ('bmp_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bmptype')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sector')),
            ],
        ),
        migrations.CreateModel(
            name='BmpCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('unit', models.CharField(max_length=20)),
                ('bmp_state', models.CharField(max_length=20)),
                ('bmp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bmp')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.state')),
            ],
        ),
        migrations.CreateModel(
            name='BmpCostCustom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('new_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bmp_cost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bmpcost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BaseScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographic_areas_by_state', models.JSONField(blank=True, default=dict, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('E', 'Evaluating'), ('C', 'Complete'), ('F', 'Failed')], default='P', max_length=1)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('base_file', models.FileField(blank=True, null=True, upload_to='base_files')),
                ('manure_nutrients_file', models.FileField(blank=True, null=True, upload_to='base_files')),
                ('reportloads_file', models.FileField(blank=True, null=True, upload_to='base_files')),
                ('geographic_areas', models.ManyToManyField(related_name='base_geographic_areas', to='core.geographicarea', verbose_name='Geographic Scale (counties)')),
                ('scenario_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenarioinfo', verbose_name='Wastewater Data Set')),
            ],
        ),
        migrations.CreateModel(
            name='JsonFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('json_file', models.JSONField(blank=True, default=dict, null=True)),
                ('zip_file', models.FileField(blank=True, null=True, upload_to='results/zips')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.result')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Optimiztion Scenario Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date modified')),
                ('loads', models.JSONField(blank=True, default=dict, null=True)),
                ('bmps', models.JSONField(blank=True, default=dict, null=True)),
                ('costs', models.JSONField(blank=True, default=dict, null=True)),
                ('bmp_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('advanced_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('misc_data', models.JSONField(blank=True, default=dict, null=True)),
                ('manure_counties', models.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('R', 'Retrieving'), ('E', 'Evaluating'), ('C', 'Complete'), ('F', 'Failed')], default='P', max_length=1)),
                ('base_scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.basescenario')),
                ('geographic_areas', models.ManyToManyField(related_name='geographic_areas', to='core.geographicarea', verbose_name='Geographic Scale (counties)')),
                ('shared_with', models.ManyToManyField(blank=True, null=True, related_name='shared_with_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('scenario_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenarioinfo', verbose_name='Wastewater Data Set')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenario'),
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('loads', models.JSONField(blank=True, default=dict, null=True)),
                ('bmps', models.JSONField(blank=True, default=dict, null=True)),
                ('costs', models.JSONField(blank=True, default=dict, null=True)),
                ('bmp_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('advanced_constraints', models.JSONField(blank=True, default=dict, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('info', models.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('E', 'Evaluating'), ('C', 'Complete'), ('F', 'Failed')], default='P', max_length=1)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenario')),
            ],
        ),
        migrations.CreateModel(
            name='BmpConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_units', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bmp_cost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bmpcost')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenario')),
            ],
        ),
        migrations.CreateModel(
            name='LoadSrc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sector')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('info', models.JSONField(blank=True, default=dict, null=True)),
                ('added', models.BooleanField(blank=True, default=False, null=True)),
                ('evaluated', models.BooleanField(blank=True, default=False, null=True)),
                ('optimized', models.BooleanField(blank=True, default=False, null=True)),
                ('land_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('animal_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('manure_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('reportloads_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('sector_loads_file', models.FileField(blank=True, null=True, upload_to='results')),
                ('land_json', models.JSONField(blank=True, default=dict, null=True)),
                ('animal_json', models.JSONField(blank=True, default=dict, null=True)),
                ('manure_json', models.JSONField(blank=True, default=dict, null=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.execution')),
            ],
        ),
        migrations.CreateModel(
            name='LandRiverSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('fips', models.IntegerField()),
                ('acres', models.DecimalField(decimal_places=3, max_digits=10)),
                ('geo_data', models.JSONField(blank=True, default=dict, null=True)),
                ('geographic_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.geographicarea')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.state')),
            ],
        ),
    ]
